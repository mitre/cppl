			    CPPL Compiler

A Cryptographic Protocol Programming Language Compiler and Runtime

BUILDING AND INSTALLING

Ensure that the OCaml Cryptokit is installed, and is available via
ocamlfind.  The Godi source code Objective Caml distribution provides
the proper environment, and makes it easy to install Cryptokit.

As usual, you can select a prefix for installation.  The example uses
$HOME/cppl.

Using GNU make, build the program with the commands:

     $ ./configure --prefix=$HOME/cppl
     $ make
     $ make install

You're done!  The compiler is installed in the bin directory of the
directory you specified as your prefix, and the runtime library is
installed with the other Objective Caml libraries.  A manual page for
cpplc is also installed.

You can get command line help with the command:

     $ cpplc --help

To use code generated by the compiler, use ocamlfind to link your
program with the cppl package.  If you use Markus Mottl's
OCamlMakefile, you only need add the following:

     export OCAMLC = ocamlfind ocamlc -package cppl -linkpkg

The source directory contains a few sample CPPL protocols with three
roles.  It also shows how to use cpplc with OCamlMakefile, however,
the makefiles are complicated because they are designed to work
without installing the cppl libraries.
